syntax="proto3";
option go_package = "github.com/lukkaal/GRPC-API/idl/user;userpb";

message RegisterRequest{
  // @inject_tag: json:"user_name" form:"user_name" uri:"user_name"
  string UserName=1;
  // @inject_tag: json:"password" form:"password" uri:"password"
  string Password=2;
  // @inject_tag: json:"password_confirm" form:"password_confirm" uri:"password_confirm"
  // confirm when register user
  string PasswordConfirm=3;
}

message LoginRequest{
  // @inject_tag: json:"user_name" form:"user_name" uri:"user_name"
  string user_name = 1;
  // @inject_tag: json:"password" form:"password" uri:"password"
  string password = 2;
}

// using token to verify when logout
message LogoutRequest {}

message UserResponse{
  // @inject_tag: json:"user_id" form:"user_id" uri:"user_id"
  int64 UserId=1;
  // @inject_tag: json:"user_name" form:"user_name" uri:"user_name"
  string UserName=2;
}

message UserDetailResponse{
  // @inject_tag: json:"code" form:"code"" uri:"code""
  int64 Code=1;
  // @inject_tag: json:"user_response" form:"user_response" uri:"user_response"
  UserResponse Us   erDetail=2;
}

message UserCommonResponse{
  // @inject_tag: json:"code" form:"code"" uri:"code""
  int64 Code=1;
  // @inject_tag: json:"msg" form:"msg"" uri:"msg""
  string Msg=2;
  // @inject_tag: json:"data" form:"data"" uri:"data""
  string Data=3;
}

service UserService{
  rpc UserLogin(LoginRequest) returns(UserDetailResponse);
  rpc UserRegister(RegisterRequest) returns(UserCommonResponse);
  rpc UserLogout(LogoutRequest) returns(UserCommonResponse);
}